@use "sass:list";
@use "sass:map";
@import "functions";

/* ============================================
    Output a rem and px fallback value for the given property
*/
@mixin rem($property, $values) {
    $px: ();
    $rem: ();

    @each $value in $values {
        @if $value == 0 or $value == auto or $value == inherit {
            $px: list.append($px, $value);
            $rem: list.append($rem, $value);
        } @else {
            $px: list.append($px, $value);
            $rem: list.append($rem, rem(strip-unit($value), strip-unit($base-font-size)));
        }
    }
    #{$property}: $px;
    #{$property}: $rem;
}

/* ============================================
    Output a `font-size: [x]rem;` declaration for the given px value
  */
@mixin rem-font-size($font-size) {
    @include rem(font-size, $font-size);
}

/* ============================================
      Font sizes
  */

@mixin font-size($keyword) {
    $small-size: map.get($small-font-sizes, $keyword);
    $medium-size: map.get($medium-font-sizes, $keyword);
    $large-size: map.get($large-font-sizes, $keyword);

    @if not $small-size or not $medium-size or not $large-size {
        @warn 'Font size ‘#{$keyword}’ does not exist';
    } @else {
        @include rem-font-size($small-size);

        @media (min-width: $screen__md) {
            @include rem-font-size($medium-size);
        }

        @media (min-width: $screen__lg) {
            @include rem-font-size($large-size);
        }
    }
}
