version: '3'

services:

  db:
    container_name: db
    image: postgres:12.0
    ports:
      - 5432:5432
    volumes:
      - ./database_dumps:/app/database_dumps

  web:
    container_name: web
    platform: linux/amd64
    build: .
    volumes:
      - ./etna:/app/etna
      - ./config:/app/config
      - ./sass:/app/sass
      - ./scripts:/app/scripts
      - ./static:/app/static
      - ./templates:/app/templates
      - ./poetry.lock:/app/poetry.lock
      - ./pyproject.toml:/app/pyproject.toml
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - media:/media
    depends_on:
      - db
    ports:
      - 8000:8080
    command: sh /app/bash/run-dev.sh
    restart: on-failure
    init: true
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment:
      - ENVIRONMENT=develop
      - DATABASE_HOST=db
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - KEEP_ALIVE=30
      # - NPM_DEVELOP_COMMAND=dev

  cli:
    container_name: cli
    platform: linux/amd64
    build: platformsh-cli
    volumes:
      - media:/app/media
      - ./database_dumps:/app/database_dumps
    env_file:
      - .env

  docs:
    container_name: docs
    image: squidfunk/mkdocs-material
    volumes:
      - .:/docs
    ports:
      - 8001:8000

  poetry_update:
    container_name: update-poetry
    build:
      context: .
      dockerfile: .docker/update-poetry/Dockerfile
    volumes:
      - .:/app
    profiles:
      - update

  npm_update:
    container_name: update-npm
    build:
      context: .
      dockerfile: .docker/update-npm/Dockerfile
    volumes:
      - .:/home
    profiles:
      - update

volumes:
  media:
