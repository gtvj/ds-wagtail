# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses. The 'type' key defines the base container
# image that will be used to run the application. There is a separate base
# container image for each primary language for the application,
# in multiple versions. Check the Python documentation
# (https://docs.platform.sh/languages/python.html#supported-versions)
# to find the supported versions for the 'python' type.
type: 'python:3.9'

variables:
  env:
    DJANGO_SETTINGS_MODULE: 'config.settings.platform'

dependencies:
  python3:
    poetry: '1.1.4'

# The size of the persistent disk of the application (in MB).
disk: 256

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form <service name>:<endpoint name>.
relationships:
    db: 'db:postgresql'
    elasticsearch: 'search:elasticsearch'

hooks:
  build: |
    poetry config virtualenvs.create false
    poetry config virtualenvs.in-project true
    poetry install --no-dev

    unset NPM_CONFIG_PREFIX
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | dash
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

    wget https://raw.githubusercontent.com/nationalarchives/tna-frontend-design-toolkit/main/dist/css/tna-toolkit.0.0.1.css --directory-prefix templates/static/css/libraries/

    nvm install v14.17.3
    nvm use v14.17.3
    npm install -g sass
    sass sass/etna.scss:templates/static/css/dist/etna.css

    npm install
    npx webpack --config webpack.config.js

    python manage.py collectstatic --no-input

  deploy: |
    python manage.py migrate

web:
  upstream:
    socket_family: unix
  commands:
    start: gunicorn config.wsgi:application --bind unix:$SOCKET --config gunicorn.conf.py
  locations:
    "/":
      root: ""
      passthru: true
      allow: false
      rules:
        '^/favicon\.ico$':
            allow: false
    "/static":
      # Allow liberal controls to allow CORS for admin font assets
      headers:
        Access-Control-Allow-Origin: '*'
      root: static
      expires: 1y
      allow: true
    "/media":
      root: media
      expires: 1y
      allow: true

# The following block defines a single writable directory, 'web/uploads'
# The 'source' specifies where the writable mount is. The 'local' source
# indicates that the mount point will point to a local directory on the
# application container. The 'source_path' specifies the subdirectory
# from within the source that the mount should point at.
mounts:
  media:
    source: local
    source_path: media
  tmp:
    source: local
    source_path: tmp
  logs:
    source: local
    source_path: logs


crons:
  import_events:
    spec: 0 2 * * *
    cmd: python manage.py update_index --chunk-size 5
