# Generated by Django 4.2.5 on 2023-09-28 14:39

from django.db import migrations, models
import django.db.models.deletion
import etna.analytics.mixins
import etna.collections.models
import modelcluster.contrib.taggit
import modelcluster.fields
import uuid
import wagtail.fields
import wagtailmetadata.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
        ("articles", "0097_alter_articlepage_mark_new_on_next_publish_and_more"),
        ("images", "0008_alter_customimagerendition_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccessType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The type of access descriptor",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Access type",
                "verbose_name_plural": "Access types",
            },
        ),
        migrations.CreateModel(
            name="AudienceType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the audience type.",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audience type",
                "verbose_name_plural": "Audience types",
            },
        ),
        migrations.CreateModel(
            name="EventType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the event type.",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event type",
                "verbose_name_plural": "Event types",
            },
        ),
        migrations.CreateModel(
            name="WhatsOnPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "teaser_text",
                    models.TextField(
                        help_text="A short, enticing description of this page. This will appear in promos and under thumbnails around the site.",
                        max_length=160,
                        verbose_name="teaser text",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "intro",
                    wagtail.fields.RichTextField(
                        help_text="1-2 sentences introducing the subject of the page, and explaining why a user should read on.",
                        max_length=300,
                        verbose_name="introductory text",
                    ),
                ),
                (
                    "search_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                        verbose_name="Search image",
                    ),
                ),
                (
                    "teaser_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image that will appear on thumbnails and promos around the site.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "What's On page",
            },
            bases=(
                wagtailmetadata.models.WagtailImageMetadataMixin,
                etna.analytics.mixins.DataLayerMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="EventPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "teaser_text",
                    models.TextField(
                        help_text="A short, enticing description of this page. This will appear in promos and under thumbnails around the site.",
                        max_length=160,
                        verbose_name="teaser text",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "intro",
                    wagtail.fields.RichTextField(
                        help_text="1-2 sentences introducing the subject of the page, and explaining why a user should read on.",
                        max_length=300,
                        verbose_name="introductory text",
                    ),
                ),
                ("article_tag_names", models.TextField(editable=False, null=True)),
                (
                    "short_title",
                    models.CharField(
                        blank=True,
                        help_text="A short title for the event. This will be used in the event listings.",
                        max_length=75,
                        null=True,
                        verbose_name="short title",
                    ),
                ),
                (
                    "event_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="whatson.eventtype",
                    ),
                ),
                (
                    "lead_image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "search_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                        verbose_name="Search image",
                    ),
                ),
                (
                    "tags",
                    modelcluster.contrib.taggit.ClusterTaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="articles.TaggedArticle",
                        to="articles.ArticleTag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "teaser_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image that will appear on thumbnails and promos around the site.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event page",
            },
            bases=(
                etna.collections.models.TopicalPageMixin,
                wagtailmetadata.models.WagtailImageMetadataMixin,
                etna.analytics.mixins.DataLayerMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="AudienceTypeOrderable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "access_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audience_types",
                        to="whatson.audiencetype",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_audience_types",
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AccessTypeOrderable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "access_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_types",
                        to="whatson.accesstype",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_access_types",
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
