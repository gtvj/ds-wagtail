# Generated by Django 5.1.2 on 2024-11-21 16:06
# etna:allowRemoveField
# etna:allowAlterField
# etna:allowDeleteModel

import django.core.validators
import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("images", "0010_alter_customimage_copyright"),
        ("wagtailcore", "0094_alter_page_locale"),
        ("whatson", "0013_remove_eventpage_uuid_remove_exhibitionpage_uuid_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="articles_title",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="dwell_time",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="hero_text_colour",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="location",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="location_url",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="max_price",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="min_price",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="need_to_know",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="need_to_know_cta",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="need_to_know_image",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="need_to_know_url",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="related_articles",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="short_title",
        ),
        migrations.RemoveField(
            model_name="exhibitionpage",
            name="target_audience",
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="accent_colour",
            field=models.CharField(
                blank=True,
                help_text="A hex colour code to be used as the accent colour for this page. If left blank, the default colour will be used.",
                max_length=7,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Enter a valid hex colour code.",
                        regex="^#[0-9a-fA-F]{6}$",
                    )
                ],
                verbose_name="Accent colour",
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="audience_detail",
            field=models.CharField(
                blank=True,
                help_text="The text for the audience detail section.",
                max_length=40,
                verbose_name="audience detail",
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="audience_heading",
            field=models.CharField(
                blank=True,
                help_text="The heading for the audience detail section.",
                max_length=40,
                verbose_name="audience heading",
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="booking_details",
            field=wagtail.fields.RichTextField(
                blank=True,
                help_text="Information about how to book tickets for the exhibition.",
                max_length=40,
                verbose_name="booking details",
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="exhibition_highlights",
            field=wagtail.fields.StreamField(
                [("exhibition_highlights", 7)],
                blank=True,
                block_lookup={
                    0: ("wagtail.blocks.CharBlock", (), {"required": False}),
                    1: (
                        "etna.core.blocks.paragraph.APIRichTextBlock",
                        (),
                        {"features": ["bold", "italic", "link"], "required": False},
                    ),
                    2: (
                        "etna.core.blocks.image.APIImageChooserBlock",
                        (),
                        {"rendition_size": "max-900x900", "required": True},
                    ),
                    3: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.',
                            "label": "Alternative text",
                            "max_length": 100,
                        },
                    ),
                    4: (
                        "etna.core.blocks.paragraph.APIRichTextBlock",
                        (),
                        {
                            "features": ["bold", "italic", "link"],
                            "help_text": "If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.",
                            "label": "Caption (optional)",
                            "required": False,
                        },
                    ),
                    5: (
                        "wagtail.blocks.StructBlock",
                        [[("image", 2), ("alt_text", 3), ("caption", 4)]],
                        {},
                    ),
                    6: ("wagtail.blocks.ListBlock", (5,), {}),
                    7: (
                        "wagtail.blocks.StructBlock",
                        [[("title", 0), ("description", 1), ("images", 6)]],
                        {},
                    ),
                },
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="featured_page",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailcore.page",
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="hero_image_caption",
            field=wagtail.fields.RichTextField(
                blank=True,
                help_text="An optional caption for hero images. This could be used for image sources or for other useful metadata.",
                verbose_name="hero image caption (optional)",
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="price",
            field=models.IntegerField(default=0, verbose_name="price"),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="related_pages_title",
            field=models.CharField(
                blank=True,
                help_text="The title to display for the related content section.",
                max_length=255,
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="review",
            field=wagtail.fields.StreamField(
                [("review", 3)],
                blank=True,
                block_lookup={
                    0: (
                        "etna.core.blocks.paragraph.APIRichTextBlock",
                        (),
                        {"features": ["bold", "italic", "link"], "required": True},
                    ),
                    1: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {"max_length": 100, "required": False},
                    ),
                    2: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [
                                (0, "No stars"),
                                (3, "3 stars"),
                                (4, "4 stars"),
                                (5, "5 stars"),
                            ],
                            "icon": "pick",
                        },
                    ),
                    3: (
                        "wagtail.blocks.StructBlock",
                        [[("quote", 0), ("attribution", 1), ("stars", 2)]],
                        {},
                    ),
                },
            ),
        ),
        migrations.AlterField(
            model_name="exhibitionpage",
            name="hero_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.DeleteModel(
            name="ExhibitionHighlight",
        ),
    ]
