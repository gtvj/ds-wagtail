# Generated by Django 5.1.2 on 2024-11-21 17:17

import django.core.validators
import wagtail.fields
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("whatson", "0014_remove_exhibitionpage_articles_title_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="exhibitionpage",
            name="related_pages",
            field=wagtail.fields.StreamField(
                [("featured_page", 2), ("featured_external_link", 7)],
                blank=True,
                block_lookup={
                    0: (
                        "etna.core.blocks.page_chooser.APIPageChooserBlock",
                        (),
                        {
                            "label": "Page",
                            "page_type": ["wagtailcore.Page"],
                            "required": True,
                        },
                    ),
                    1: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": "Optional override for the teaser text",
                            "label": "Teaser text override",
                            "required": False,
                        },
                    ),
                    2: (
                        "wagtail.blocks.StructBlock",
                        [[("page", 0), ("teaser_text", 1)]],
                        {},
                    ),
                    3: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {"label": "Title", "max_length": 100},
                    ),
                    4: ("wagtail.blocks.CharBlock", (), {"label": "Description"}),
                    5: ("wagtail.blocks.URLBlock", (), {"label": "URL"}),
                    6: (
                        "etna.core.blocks.image.APIImageChooserBlock",
                        (),
                        {"label": "Image", "required": False},
                    ),
                    7: (
                        "wagtail.blocks.StructBlock",
                        [[("title", 3), ("description", 4), ("url", 5), ("image", 6)]],
                        {},
                    ),
                },
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="exhibitionpage",
            name="video",
            field=wagtail.fields.StreamField(
                [("youtube", 5), ("media", 9)],
                blank=True,
                block_lookup={
                    0: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {"label": "Title", "max_length": 100, "required": True},
                    ),
                    1: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "label": "YouTube Video ID",
                            "max_length": 11,
                            "required": True,
                            "validators": [
                                django.core.validators.RegexValidator(
                                    message="Invalid YouTube Video ID",
                                    regex="^[a-zA-Z0-9_-]{11}$",
                                )
                            ],
                        },
                    ),
                    2: (
                        "etna.core.blocks.image.APIImageChooserBlock",
                        (),
                        {
                            "label": "Preview Image",
                            "rendition_size": "max-640x360",
                            "required": False,
                        },
                    ),
                    3: (
                        "wagtail.blocks.RichTextBlock",
                        (),
                        {"label": "Transcript", "required": False},
                    ),
                    4: (
                        "wagtail.blocks.BooleanBlock",
                        (),
                        {
                            "help_text": "Tick if the video has captions on YouTube",
                            "label": "Captions available",
                            "required": False,
                        },
                    ),
                    5: (
                        "wagtail.blocks.StructBlock",
                        [
                            [
                                ("title", 0),
                                ("video_id", 1),
                                ("preview_image", 2),
                                ("transcript", 3),
                                ("captions_available", 4),
                            ]
                        ],
                        {},
                    ),
                    6: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": "A descriptive title for the media block",
                            "required": True,
                        },
                    ),
                    7: (
                        "etna.core.blocks.image.APIImageChooserBlock",
                        (),
                        {
                            "help_text": "A thumbnail image for the media block",
                            "required": False,
                        },
                    ),
                    8: ("etna.media.blocks.MediaChooserBlock", (), {}),
                    9: (
                        "wagtail.blocks.StructBlock",
                        [[("title", 6), ("thumbnail", 7), ("media", 8)]],
                        {},
                    ),
                },
            ),
        ),
    ]
