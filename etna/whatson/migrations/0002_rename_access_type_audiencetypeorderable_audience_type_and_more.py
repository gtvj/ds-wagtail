# Generated by Django 4.2.5 on 2023-09-29 11:10

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):
    dependencies = [
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
        ("images", "0008_alter_customimagerendition_file"),
        ("whatson", "0001_initial"),
    ]

    operations = [
        migrations.RenameField(
            model_name="audiencetypeorderable",
            old_name="access_type",
            new_name="audience_type",
        ),
        migrations.AddField(
            model_name="eventpage",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    (
                        "paragraph",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "text",
                                    wagtail.blocks.RichTextBlock(
                                        features=["bold", "italic", "link", "ol", "ul"]
                                    ),
                                )
                            ]
                        ),
                    )
                ],
                blank=True,
                help_text="Add content for this page",
                null=True,
                use_json_field=True,
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="booking_type",
            field=models.CharField(
                default="Drop in",
                help_text="The type of booking for the event.",
                max_length=20,
                verbose_name="booking type",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="contact_info",
            field=wagtail.fields.RichTextField(
                blank=True,
                help_text="Information about who to contact for the event.",
                null=True,
                verbose_name="contact info",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="end_date",
            field=models.DateTimeField(
                help_text="The date and time the event ends.",
                null=True,
                verbose_name="end date",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="registration_cost",
            field=models.IntegerField(
                blank=True,
                help_text="The cost of registration for the event.",
                null=True,
                verbose_name="registration cost",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="registration_info",
            field=wagtail.fields.RichTextField(
                blank=True,
                help_text="Information about how to register for the event.",
                null=True,
                verbose_name="registration info",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="registration_url",
            field=models.URLField(
                blank=True,
                help_text="The URL for the event registration.",
                max_length=255,
                null=True,
                verbose_name="registration url",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="start_date",
            field=models.DateTimeField(
                help_text="The date and time the event starts.",
                null=True,
                verbose_name="start date",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="venue_address",
            field=wagtail.fields.RichTextField(
                blank=True,
                help_text="The address of the venue.",
                null=True,
                verbose_name="venue address",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="venue_space_name",
            field=models.CharField(
                blank=True,
                help_text="The name of the venue space.",
                max_length=255,
                null=True,
                verbose_name="venue space name",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="venue_type",
            field=models.CharField(
                choices=[
                    ("online", "Online"),
                    ("in_person", "In person"),
                    ("hybrid", "Hybrid"),
                ],
                default="in_person",
                help_text="The type of venue for the event.",
                max_length=15,
                verbose_name="venue type",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="venue_website",
            field=models.URLField(
                blank=True,
                help_text="The website for the venue.",
                max_length=255,
                null=True,
                verbose_name="venue website",
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="video_conference_info",
            field=wagtail.fields.RichTextField(
                blank=True,
                help_text="Information about the video conference.",
                null=True,
                verbose_name="video conference info",
            ),
        ),
        migrations.AlterField(
            model_name="eventpage",
            name="event_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="whatson.eventtype",
            ),
        ),
        migrations.AlterField(
            model_name="eventpage",
            name="short_title",
            field=models.CharField(
                help_text="A short title for the event. This will be used in the event listings.",
                max_length=50,
                null=True,
                verbose_name="short title",
            ),
        ),
        migrations.CreateModel(
            name="Speaker",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "speaker_name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the speaker.",
                        max_length=100,
                        null=True,
                        verbose_name="speaker name",
                    ),
                ),
                (
                    "speaker_description",
                    models.CharField(
                        blank=True,
                        help_text="The description of the speaker.",
                        max_length=200,
                        null=True,
                        verbose_name="speaker description",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="speaker_information",
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "speaker_image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Host",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "host_name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the host.",
                        max_length=100,
                        null=True,
                        verbose_name="host name",
                    ),
                ),
                (
                    "host_description",
                    models.CharField(
                        blank=True,
                        help_text="The description of the host.",
                        max_length=200,
                        null=True,
                        verbose_name="host description",
                    ),
                ),
                (
                    "host_image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="host_information",
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
