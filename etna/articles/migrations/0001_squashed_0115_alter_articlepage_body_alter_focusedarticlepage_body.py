# Generated by Django 5.1.4 on 2025-01-09 14:36

import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import etna.analytics.mixins
import etna.collections.models
import etna.core.blocks.featured_content
import etna.core.blocks.promoted_links
import etna.records.blocks
import etna.records.fields
import modelcluster.contrib.taggit
import modelcluster.fields
import uuid
import wagtail.fields
import wagtailmetadata.models
from django.db import migrations, models


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# etna.articles.migrations.0028_migrate_image_block_values_to_new_block_structure
# etna.articles.migrations.0029_migrate_hero_image_alt_text
# etna.articles.migrations.0032_auto_20220304_2226
# etna.articles.migrations.0036_migrate_insights_body_content_to_content_sections
# etna.articles.migrations.0056_set_teaser_text_from_intro
# etna.articles.migrations.0059_update_revisions_to_reflect_intro_field_change
# etna.articles.migrations.0060_copy_articlepage_topic_and_timeperiod_values_to_link_tables
# etna.articles.migrations.0062_fix_incorrectly_formatted_article_revision_content
# etna.articles.migrations.0077_set_skos_id_for_articletags
# etna.articles.migrations.0098_alter_focusedarticlepage_author
# etna.articles.migrations.0101_alter_articleindexpage_featured_article
# etna.articles.migrations.0113_remove_articlepage_mark_new_on_next_publish_and_more

class Migration(migrations.Migration):

    replaces = [('articles', '0001_initial'), ('articles', '0002_auto_20210712_0956'), ('articles', '0003_auto_20210712_1558'), ('articles', '0004_insightspage_hero_image'), ('articles', '0005_rename_title_to_heading'), ('articles', '0006_record_embed_blocks'), ('articles', '0007_add_section_block'), ('articles', '0008_add_teaser_image'), ('articles', '0009_add_author_block'), ('articles', '0010_add_promoted_item'), ('articles', '0011_add_promoted_list'), ('articles', '0012_add_related_items'), ('articles', '0013_rename_introduction_to_sub_heading'), ('articles', '0014_alter_field_body'), ('articles', '0015_insightspage_teaser_image'), ('articles', '0016_remove_author_block'), ('articles', '0017_alter_richtext_features'), ('articles', '0018_replace_pubdate_with_duration'), ('articles', '0019_restore_0017_overwritten_by_0018'), ('articles', '0020_alter_field_body'), ('articles', '0021_reinstate_pub_date_as_optional_field'), ('articles', '0022_make_quote_heading_optional'), ('articles', '0023_make_paragraph_heading_editable'), ('articles', '0024_fix_heading_help_text'), ('articles', '0025_auto_20211111_1709'), ('articles', '0026_add_accessible_image_block'), ('articles', '0027_change_accessible_image_required'), ('articles', '0028_migrate_image_block_values_to_new_block_structure'), ('articles', '0029_migrate_hero_image_alt_text'), ('articles', '0030_insightsindexpage_featured_insight'), ('articles', '0031_auto_20220306_0443'), ('articles', '0032_auto_20220304_2226'), ('articles', '0033_insightspage_insight_tag_names'), ('articles', '0034_insightsindexpage_featured_collections'), ('articles', '0035_add_content_section_blocks_to_insights_body'), ('articles', '0036_migrate_insights_body_content_to_content_sections'), ('articles', '0037_remove_top_level_content_options_from_insights_body'), ('articles', '0038_structured_streamblock_amends'), ('articles', '0039_alter_insightspage_body'), ('articles', '0040_add_content_warning_fields'), ('articles', '0041_alter_insightspage_body'), ('articles', '0042_alter_insightspage_body'), ('articles', '0043_streamfield_use_json_field'), ('articles', '0044_remove_insightsindexpage_body'), ('articles', '0045_add_search_image_fields'), ('articles', '0046_remove_insightsindexpage_featured_collections_and_more'), ('articles', '0047_insights_insight_to_article'), ('articles', '0048_add_recordarticlepage_and_pagegalleryimage'), ('articles', '0049_modify_page_type_labels'), ('articles', '0050_swap_image_reference_fields_to_new_model'), ('articles', '0051_remove_pagegalleryimage_is_sensitive_and_more'), ('articles', '0052_remove_pagegalleryimage_transcription_header_and_more'), ('articles', '0053_add_teaser_text'), ('articles', '0054_alter_sub_heading_fields'), ('articles', '0055_rename_sub_heading_fields'), ('articles', '0056_set_teaser_text_from_intro'), ('articles', '0057_rename_standfirst_recordarticlepage_intro'), ('articles', '0058_alter_recordarticlepage_intro'), ('articles', '0059_update_revisions_to_reflect_intro_field_change'), ('articles', '0060_copy_articlepage_topic_and_timeperiod_values_to_link_tables'), ('articles', '0061_remove_articlepage_time_period_and_topic'), ('articles', '0062_fix_incorrectly_formatted_article_revision_content'), ('articles', '0063_alter_articleindexpage_teaser_image_and_more'), ('articles', '0064_alter_articlepage_body'), ('articles', '0065_alter_articleindexpage_search_image_and_more'), ('articles', '0066_alter_articleindexpage_search_image_and_more'), ('articles', '0067_articlepage_mark_new_on_next_publish_and_more'), ('articles', '0068_alter_articlepage_mark_new_on_next_publish'), ('articles', '0069_alter_articlepage_mark_new_on_next_publish'), ('articles', '0070_alter_articlepage_mark_new_on_next_publish'), ('articles', '0071_recordarticlepage_promoted_links'), ('articles', '0072_alter_articletag_slug'), ('articles', '0073_recordarticlepage_featured_highlight_gallery'), ('articles', '0074_remove_articlepage_hero_image_alt_text_and_more'), ('articles', '0075_alter_articlepage_body'), ('articles', '0076_articletag_skos_id'), ('articles', '0077_set_skos_id_for_articletags'), ('articles', '0078_alter_articletag_skos_id'), ('articles', '0079_add_page_uuid'), ('articles', '0080_make_page_uuid_required'), ('articles', '0079_alter_articlepage_body'), ('articles', '0081_merge_20230504_1135'), ('articles', '0082_recordarticlepage_intro_image'), ('articles', '0083_alter_articlepage_body'), ('articles', '0084_alter_articlepage_body'), ('articles', '0085_alter_recordarticlepage_promoted_links'), ('articles', '0086_alter_articlepage_body'), ('articles', '0087_recordarticlepage_mark_new_on_next_publish_and_more'), ('articles', '0088_alter_recordarticlepage_mark_new_on_next_publish'), ('articles', '0089_alter_articleindexpage_featured_article'), ('articles', '0090_recordarticlepage_gallery_heading'), ('articles', '0091_focusedarticlepage'), ('articles', '0092_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0093_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0094_alter_articleindexpage_featured_pages'), ('articles', '0095_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0096_focusedarticlepage_article_tag_names_and_more'), ('articles', '0097_alter_articlepage_mark_new_on_next_publish_and_more'), ('articles', '0098_alter_focusedarticlepage_author'), ('articles', '0099_alter_articleindexpage_featured_article_and_more'), ('articles', '0100_remove_focusedarticlepage_author'), ('articles', '0101_alter_articleindexpage_featured_article'), ('articles', '0102_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0103_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0104_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0105_alter_recordarticlepage_featured_article'), ('articles', '0106_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0107_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0108_articleindexpage_alert_articlepage_alert_and_more'), ('articles', '0109_articleindexpage_twitter_og_description_and_more'), ('articles', '0110_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0111_remove_articleindexpage_uuid_remove_articlepage_uuid_and_more'), ('articles', '0112_alter_articlepage_body_alter_focusedarticlepage_body'), ('articles', '0113_remove_articlepage_mark_new_on_next_publish_and_more'), ('articles', '0114_remove_articlepage_mark_new_on_next_publish_and_more'), ('articles', '0115_alter_articlepage_body_alter_focusedarticlepage_body')]

    initial = True

    dependencies = [
        ('alerts', '0001_initial'),
        ('collections', '0020_rename_result_page_record_relationship'),
        ('collections', '0026_collections_insight_to_article'),
        ('collections', '0030_add_teaser_text'),
        ('collections', '0040_timeperiodexplorerindexpage_hero_image_and_more'),
        ('core', '0003_set_page_uuid'),
        ('home', '0015_home_insight_to_article'),
        ('images', '0002_migrate_old_image_data_to_new_model'),
        ('images', '0005_alter_customimage_file_and_more'),
        ('images', '0007_customimage_custom_sensitive_image_warning_and_more'),
        ('images', '0008_alter_customimagerendition_file'),
        ('images', '0009_alter_customimage_custom_sensitive_image_warning'),
        ('people', '0002_authorindexpage_authorpage_authortag_delete_author'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailcore', '0060_fix_workflow_unique_constraint'),
        ('wagtailcore', '0077_alter_revision_user'),
        ('wagtailcore', '0083_workflowcontenttype'),
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
        ('wagtailimages', '0023_add_choose_permissions'),
        ('wagtailimages', '0024_index_image_file_hash'),
    ]

    operations = [
        migrations.CreateModel(
            name='InsightsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('sub_heading', models.CharField(max_length=200)),
                ('teaser_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('body', wagtail.fields.StreamField([('paragraph', 3)], blank=True, block_lookup={0: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'Heading level 2'), ('h3', 'Heading level 3'), ('h4', 'Heading level 4')], 'help_text': 'Use this field to select the appropriate heading tag. Check where this component will sit in the page to ensure that it follows the correct heading order and avoids skipping levels e.g. an &lt;h4&gt; should not follow an &lt;h2&gt;. For further information, see: <a href=https://www.w3.org/WAI/tutorials/page-structure/headings target=_blank>https://www.w3.org/WAI/tutorials/page-structure/headings/</a>'}), 1: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': True}), 2: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ul'], 'required': True}), 3: ('wagtail.blocks.StructBlock', [[('heading_level', 0), ('heading', 1), ('paragraph', 2)]], {})}, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='InsightsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('sub_heading', models.CharField(max_length=200)),
                ('body', wagtail.fields.StreamField([('featured_record', 6), ('featured_records', 10), ('media', 13), ('paragraph_with_heading', 17), ('promoted_item', 27), ('promoted_list', 34), ('quote', 37), ('related_items', 39), ('section', 41)], blank=True, block_lookup={0: ('etna.records.blocks.RecordChooserBlock', (), {}), 1: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 2: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 3: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 4: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'An optional caption for non-decorative images, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('image', 1), ('decorative', 2), ('alt_text', 3), ('caption', 4)]], {'help_text': 'Add an image to be displayed with the selected record.', 'label': 'Teaser image', 'required': False, 'template': 'insights/blocks/images/blog-embed__image-container.html'}), 6: ('wagtail.blocks.StructBlock', [[('record', 0), ('image', 5)]], {}), 7: ('wagtail.blocks.CharBlock', (), {'label': 'Heading (heading level 3)', 'max_length': 100, 'required': True}), 8: ('wagtail.blocks.CharBlock', (), {'max_length': 200, 'required': True}), 9: ('wagtail.blocks.ListBlock', (etna.records.blocks.RecordChooserBlock,), {}), 10: ('wagtail.blocks.StructBlock', [[('heading', 7), ('introduction', 8), ('records', 9)]], {}), 11: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'A background image for the media block'}), 12: ('etna.media.blocks.MediaChooserBlock', (), {}), 13: ('wagtail.blocks.StructBlock', [[('background_image', 11), ('media', 12)]], {}), 14: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'Heading level 2'), ('h3', 'Heading level 3'), ('h4', 'Heading level 4')], 'help_text': 'Use this field to select the appropriate heading tag. Check where this component will sit in the page to ensure that it follows the correct heading order and avoids skipping levels e.g. an &lt;h4&gt; should not follow an &lt;h2&gt;. For further information, see: <a href=https://www.w3.org/WAI/tutorials/page-structure/headings target=_blank>https://www.w3.org/WAI/tutorials/page-structure/headings/</a>'}), 15: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': True}), 16: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ul'], 'required': True}), 17: ('wagtail.blocks.StructBlock', [[('heading_level', 14), ('heading', 15), ('paragraph', 16)]], {}), 18: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title (heading level 3)', 'max_length': 100}), 19: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 20: ('wagtail.blocks.DateBlock', (), {'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration. Or estimated read time of article.', 'label': 'Duration/Read time', 'max_length': 50, 'required': False}), 22: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 23: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 24: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 25: ('wagtail.blocks.StructBlock', [[('image', 1), ('decorative', 2), ('alt_text', 3), ('caption', 4)]], {'help_text': 'An image used to create a teaser for the promoted page', 'label': 'Teaser image', 'template': 'insights/blocks/images/blog-embed__image-container.html'}), 26: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 27: ('wagtail.blocks.StructBlock', [[('title', 18), ('category', 19), ('publication_date', 20), ('duration', 21), ('url', 22), ('target_blank', 23), ('cta_label', 24), ('image', 25), ('description', 26)]], {}), 28: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 29: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Heading (heading level 4)', 'max_length': 100, 'required': True}), 30: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page', 'required': False}), 31: ('wagtail.blocks.URLBlock', (), {'required': True}), 32: ('wagtail.blocks.StructBlock', [[('title', 29), ('description', 30), ('url', 31)]], {}), 33: ('wagtail.blocks.ListBlock', (32,), {}), 34: ('wagtail.blocks.StructBlock', [[('heading', 7), ('category', 19), ('summary', 28), ('promoted_items', 33)]], {}), 35: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 36: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 37: ('wagtail.blocks.StructBlock', [[('heading', 35), ('quote', 36), ('attribution', 35)]], {}), 38: ('wagtail.blocks.ListBlock', (etna.core.blocks.featured_content.RelatedItemBlock,), {}), 39: ('wagtail.blocks.StructBlock', [[('heading', 7), ('description', 15), ('related_items', 38)]], {}), 40: ('wagtail.blocks.CharBlock', (), {'label': 'Section heading (heading level 2)', 'max_length': 100, 'required': True}), 41: ('wagtail.blocks.StructBlock', [[('heading', 40)]], {})}, null=True)),
                ('hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('teaser_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('hero_image_alt_text', models.CharField(blank=True, help_text='Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', max_length=100)),
                ('hero_image_caption', wagtail.fields.RichTextField(blank=True, help_text='An optional caption for non-decorative images, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.', verbose_name='hero image caption (optional)')),
                ('hero_image_decorative', models.BooleanField(default=False, help_text='Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">Check the guidance to see if your image is decorative</a>.', verbose_name='this image is purely decorative')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0028_migrate_image_block_values_to_new_block_structure.migrate_forwards,
            reverse_code=etna.articles.migrations.0028_migrate_image_block_values_to_new_block_structure.migrate_backwards,
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0029_migrate_hero_image_alt_text.move_alt_text,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AddField(
            model_name='insightsindexpage',
            name='featured_insight',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.insightspage'),
        ),
        migrations.CreateModel(
            name='InsightsTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'insights tag',
                'verbose_name_plural': 'insights tags',
            },
        ),
        migrations.AddField(
            model_name='insightspage',
            name='time_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='collections.timeperiodexplorerpage'),
        ),
        migrations.AddField(
            model_name='insightspage',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='collections.topicexplorerpage'),
        ),
        migrations.CreateModel(
            name='TaggedInsights',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='articles.insightspage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_insights', to='articles.insightstag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='insightspage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='articles.TaggedInsights', to='articles.InsightsTag', verbose_name='Tags'),
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0032_auto_20220304_2226.forwards_func,
            reverse_code=etna.articles.migrations.0032_auto_20220304_2226.reverse_func,
        ),
        migrations.AddField(
            model_name='insightspage',
            name='insight_tag_names',
            field=models.TextField(default='', editable=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='insightsindexpage',
            name='featured_collections',
            field=wagtail.fields.StreamField([('featuredcollection', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.TextBlock', (), {'max_length': 200}), 2: ('etna.core.blocks.page_list.PageListBlock', ('articles.InsightsPage',), {'max_num': 9, 'min_num': 3}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('description', 1), ('items', 2)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='insightspage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 49), ('featured_record', 22), ('featured_records', 26), ('media', 17), ('paragraph_with_heading', 52), ('promoted_item', 36), ('promoted_list', 43), ('quote', 5), ('related_items', 45), ('section', 54)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Section heading (H2)', 'max_length': 100}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ul']}), 2: ('wagtail.blocks.StructBlock', [[('text', 1)]], {}), 3: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 4: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 5: ('wagtail.blocks.StructBlock', [[('heading', 3), ('quote', 4), ('attribution', 3)]], {}), 6: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 7: ('wagtail.blocks.StructBlock', [[('heading', 6)]], {'label': 'H3'}), 8: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-section heading (H3)', 'max_length': 100}), 9: ('wagtail.blocks.StructBlock', [[('heading', 6)]], {'label': 'H4'}), 10: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 11: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 13: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('image', 10), ('decorative', 11), ('alt_text', 12), ('caption', 13)]], {}), 15: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'A background image for the media block'}), 16: ('etna.media.blocks.MediaChooserBlock', (), {}), 17: ('wagtail.blocks.StructBlock', [[('background_image', 15), ('media', 16)]], {}), 18: ('etna.records.blocks.RecordChooserBlock', (), {}), 19: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 20: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'An optional caption for non-decorative images, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 21: ('wagtail.blocks.StructBlock', [[('image', 10), ('decorative', 11), ('alt_text', 19), ('caption', 20)]], {'help_text': 'Add an image to be displayed with the selected record.', 'label': 'Teaser image', 'required': False, 'template': 'insights/blocks/images/blog-embed__image-container.html'}), 22: ('wagtail.blocks.StructBlock', [[('record', 18), ('image', 21)]], {}), 23: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': True}), 24: ('wagtail.blocks.CharBlock', (), {'max_length': 200, 'required': True}), 25: ('wagtail.blocks.ListBlock', (etna.records.blocks.RecordChooserBlock,), {}), 26: ('wagtail.blocks.StructBlock', [[('heading', 23), ('introduction', 24), ('records', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 28: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 29: ('wagtail.blocks.DateBlock', (), {'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration. Or estimated read time of article.', 'label': 'Duration/Read time', 'max_length': 50, 'required': False}), 31: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 32: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 33: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 34: ('wagtail.blocks.StructBlock', [[('image', 10), ('decorative', 11), ('alt_text', 19), ('caption', 20)]], {'help_text': 'An image used to create a teaser for the promoted page', 'label': 'Teaser image', 'template': 'insights/blocks/images/blog-embed__image-container.html'}), 35: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 36: ('wagtail.blocks.StructBlock', [[('title', 27), ('category', 28), ('publication_date', 29), ('duration', 30), ('url', 31), ('target_blank', 32), ('cta_label', 33), ('image', 34), ('description', 35)]], {}), 37: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 38: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Heading', 'max_length': 100, 'required': True}), 39: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page', 'required': False}), 40: ('wagtail.blocks.URLBlock', (), {'required': True}), 41: ('wagtail.blocks.StructBlock', [[('title', 38), ('description', 39), ('url', 40)]], {}), 42: ('wagtail.blocks.ListBlock', (41,), {}), 43: ('wagtail.blocks.StructBlock', [[('heading', 23), ('category', 28), ('summary', 37), ('promoted_items', 42)]], {}), 44: ('wagtail.blocks.ListBlock', (etna.core.blocks.featured_content.RelatedItemBlock,), {}), 45: ('wagtail.blocks.StructBlock', [[('heading', 23), ('description', 23), ('related_items', 44)]], {}), 46: ('wagtail.blocks.StreamBlock', [[('paragraph', 2), ('quote', 5), ('sub_heading', 9), ('image', 14), ('media', 17), ('featured_record', 22), ('featured_records', 26), ('promoted_item', 36), ('promoted_list', 43), ('related_items', 45)]], {}), 47: ('wagtail.blocks.StructBlock', [[('heading', 8), ('content', 46)]], {}), 48: ('wagtail.blocks.StreamBlock', [[('paragraph', 2), ('quote', 5), ('sub_heading', 7), ('content_sub_section', 47), ('image', 14), ('media', 17), ('featured_record', 22), ('featured_records', 26), ('promoted_item', 36), ('promoted_list', 43), ('related_items', 45)]], {'required': False}), 49: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 48)]], {}), 50: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'Heading level 2'), ('h3', 'Heading level 3'), ('h4', 'Heading level 4')], 'help_text': 'Use this field to select the appropriate heading tag. Check where this component will sit in the page to ensure that it follows the correct heading order and avoids skipping levels e.g. an &lt;h4&gt; should not follow an &lt;h2&gt;. For further information, see: <a href=https://www.w3.org/WAI/tutorials/page-structure/headings target=_blank>https://www.w3.org/WAI/tutorials/page-structure/headings/</a>'}), 51: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ul'], 'required': True}), 52: ('wagtail.blocks.StructBlock', [[('heading_level', 50), ('heading', 23), ('paragraph', 51)]], {}), 53: ('wagtail.blocks.CharBlock', (), {'label': 'Section heading (heading level 2)', 'max_length': 100, 'required': True}), 54: ('wagtail.blocks.StructBlock', [[('heading', 53)]], {})}, null=True),
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0036_migrate_insights_body_content_to_content_sections.migrate_forwards,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AddField(
            model_name='insightspage',
            name='custom_warning_text',
            field=wagtail.fields.RichTextField(blank=True, help_text='If specified, will be used for the content warning. Otherwise the default text will be used.', verbose_name='custom content warning text (optional)'),
        ),
        migrations.AddField(
            model_name='insightspage',
            name='display_content_warning',
            field=models.BooleanField(default=False, verbose_name='display a content warning on this page'),
        ),
        migrations.AlterField(
            model_name='insightspage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 44)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ul']}), 2: ('wagtail.blocks.StructBlock', [[('text', 1)]], {}), 3: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 4: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 5: ('wagtail.blocks.StructBlock', [[('heading', 3), ('quote', 4), ('attribution', 3)]], {}), 6: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 7: ('wagtail.blocks.StructBlock', [[('heading', 6)]], {}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 10: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('image', 8), ('alt_text', 9), ('caption', 10)]], {}), 12: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'A background image for the media block'}), 13: ('etna.media.blocks.MediaChooserBlock', (), {}), 14: ('wagtail.blocks.StructBlock', [[('background_image', 12), ('media', 13)]], {}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': "A short description (max 200 characters) to add 'relevancy' to the record details. For example: 'Entry for Alice Hawkins in the index to suffragettes arrested'.", 'label': 'Descriptive title', 'max_length': 200}), 16: ('etna.records.blocks.RecordChooserBlock', (), {}), 17: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 18: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 19: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'An optional caption for non-decorative images, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 20: ('wagtail.blocks.StructBlock', [[('image', 8), ('decorative', 17), ('alt_text', 18), ('caption', 19)]], {'help_text': 'Add an image to be displayed with the selected record.', 'label': 'Teaser image', 'required': False, 'template': 'insights/blocks/images/blog-embed__image-container.html'}), 21: ('wagtail.blocks.StructBlock', [[('title', 15), ('record', 16), ('image', 20)]], {}), 22: ('wagtail.blocks.CharBlock', (), {'max_length': 200, 'required': False}), 23: ('wagtail.blocks.StructBlock', [[('introduction', 22)]], {}), 24: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 25: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 26: ('wagtail.blocks.DateBlock', (), {'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration. Or estimated read time of article.', 'label': 'Duration', 'max_length': 50, 'required': False}), 29: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 30: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 31: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 32: ('wagtail.blocks.StructBlock', [[('image', 8), ('decorative', 17), ('alt_text', 18)]], {'label': 'Teaser image', 'template': 'insights/blocks/images/blog-embed__image-container.html'}), 33: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 34: ('wagtail.blocks.StructBlock', [[('title', 24), ('category', 25), ('publication_date', 26), ('author', 27), ('duration', 28), ('url', 29), ('target_blank', 30), ('cta_label', 31), ('image', 32), ('description', 33)]], {}), 35: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 36: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 37: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 38: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 39: ('wagtail.blocks.URLBlock', (), {'required': True}), 40: ('wagtail.blocks.StructBlock', [[('title', 37), ('description', 38), ('url', 39)]], {}), 41: ('wagtail.blocks.ListBlock', (40,), {}), 42: ('wagtail.blocks.StructBlock', [[('category', 35), ('summary', 36), ('promoted_items', 41)]], {}), 43: ('wagtail.blocks.StreamBlock', [[('paragraph', 2), ('quote', 5), ('sub_heading', 7), ('image', 11), ('media', 14), ('featured_record', 21), ('featured_records', 23), ('promoted_item', 34), ('promoted_list', 42)]], {'required': False}), 44: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 43)]], {})}, null=True),
        ),
        migrations.RemoveField(
            model_name='insightsindexpage',
            name='body',
        ),
        migrations.AddField(
            model_name='insightsindexpage',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image'),
        ),
        migrations.AddField(
            model_name='insightspage',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image'),
        ),
        migrations.RemoveField(
            model_name='insightsindexpage',
            name='featured_collections',
        ),
        migrations.RenameModel(
            old_name='InsightsPage',
            new_name='ArticlePage',
        ),
        migrations.AddField(
            model_name='insightsindexpage',
            name='featured_pages',
            field=wagtail.fields.StreamField([('featuredpages', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.TextBlock', (), {'max_length': 200}), 2: ('etna.core.blocks.page_list.PageListBlock', ('articles.ArticlePage',), {'max_num': 9, 'min_num': 3}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('description', 1), ('items', 2)]], {})}, null=True),
        ),
        migrations.RenameModel(
            old_name='InsightsIndexPage',
            new_name='ArticleIndexPage',
        ),
        migrations.RenameField(
            model_name='articleindexpage',
            old_name='featured_insight',
            new_name='featured_article',
        ),
        migrations.RenameModel(
            old_name='InsightsTag',
            new_name='ArticleTag',
        ),
        migrations.AlterModelOptions(
            name='articletag',
            options={'verbose_name': 'article tag', 'verbose_name_plural': 'article tags'},
        ),
        migrations.RenameModel(
            old_name='TaggedInsights',
            new_name='TaggedArticle',
        ),
        migrations.AlterField(
            model_name='taggedarticle',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_article', to='articles.articletag'),
        ),
        migrations.RenameField(
            model_name='articlepage',
            old_name='insight_tag_names',
            new_name='article_tag_names',
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 44)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 2: ('wagtail.blocks.StructBlock', [[('text', 1)]], {}), 3: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 4: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 5: ('wagtail.blocks.StructBlock', [[('heading', 3), ('quote', 4), ('attribution', 3)]], {}), 6: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 7: ('wagtail.blocks.StructBlock', [[('heading', 6)]], {}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 10: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('image', 8), ('alt_text', 9), ('caption', 10)]], {}), 12: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'A background image for the media block'}), 13: ('etna.media.blocks.MediaChooserBlock', (), {}), 14: ('wagtail.blocks.StructBlock', [[('background_image', 12), ('media', 13)]], {}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': "A short description (max 200 characters) to add 'relevancy' to the record details. For example: 'Entry for Alice Hawkins in the index to suffragettes arrested'.", 'label': 'Descriptive title', 'max_length': 200}), 16: ('etna.records.blocks.RecordChooserBlock', (), {}), 17: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 18: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 19: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'An optional caption for non-decorative images, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 20: ('wagtail.blocks.StructBlock', [[('image', 8), ('decorative', 17), ('alt_text', 18), ('caption', 19)]], {'help_text': 'Add an image to be displayed with the selected record.', 'label': 'Teaser image', 'required': False, 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 21: ('wagtail.blocks.StructBlock', [[('title', 15), ('record', 16), ('image', 20)]], {}), 22: ('wagtail.blocks.CharBlock', (), {'max_length': 200, 'required': False}), 23: ('wagtail.blocks.StructBlock', [[('introduction', 22)]], {}), 24: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 25: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 26: ('wagtail.blocks.DateBlock', (), {'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration. Or estimated read time of article.', 'label': 'Duration', 'max_length': 50, 'required': False}), 29: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 30: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 31: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 32: ('wagtail.blocks.StructBlock', [[('image', 8), ('decorative', 17), ('alt_text', 18)]], {'label': 'Teaser image', 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 33: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 34: ('wagtail.blocks.StructBlock', [[('title', 24), ('category', 25), ('publication_date', 26), ('author', 27), ('duration', 28), ('url', 29), ('target_blank', 30), ('cta_label', 31), ('image', 32), ('description', 33)]], {}), 35: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 36: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 37: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 38: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 39: ('wagtail.blocks.URLBlock', (), {'required': True}), 40: ('wagtail.blocks.StructBlock', [[('title', 37), ('description', 38), ('url', 39)]], {}), 41: ('wagtail.blocks.ListBlock', (40,), {}), 42: ('wagtail.blocks.StructBlock', [[('category', 35), ('summary', 36), ('promoted_items', 41)]], {}), 43: ('wagtail.blocks.StreamBlock', [[('paragraph', 2), ('quote', 5), ('sub_heading', 7), ('image', 11), ('media', 14), ('featured_record', 21), ('featured_records', 23), ('promoted_item', 34), ('promoted_list', 42)]], {'required': False}), 44: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 43)]], {})}, null=True),
        ),
        migrations.AlterModelOptions(
            name='articlepage',
            options={'verbose_name': 'article', 'verbose_name_plural': 'articles'},
        ),
        migrations.AlterModelOptions(
            name='articleindexpage',
            options={'verbose_name': 'article index page'},
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Search image'),
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='hero_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Search image'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.CreateModel(
            name='PageGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('alt_text', models.CharField(help_text='Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', max_length=100, verbose_name='alternative text')),
                ('caption', wagtail.fields.RichTextField(blank=True, help_text='An optional caption, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.')),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='wagtailcore.page')),
            ],
            options={
                'verbose_name': 'gallery image',
                'verbose_name_plural': 'gallery images',
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='articleindexpage',
            name='teaser_text',
            field=models.TextField(default='', help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='articlepage',
            name='teaser_text',
            field=models.TextField(default='', help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='RecordArticlePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('display_content_warning', models.BooleanField(default=False, verbose_name='display a content warning on this page')),
                ('custom_warning_text', wagtail.fields.RichTextField(blank=True, help_text='If specified, will be used for the content warning. Otherwise the default text will be used.', verbose_name='custom content warning text (optional)')),
                ('standfirst', models.CharField(max_length=350, verbose_name='standfirst')),
                ('record', etna.records.fields.RecordField(db_index=True, verbose_name='record')),
                ('date_text', models.CharField(help_text='Date(s) related to the record (max. character length: 100)', max_length=100, verbose_name='date text')),
                ('about', wagtail.fields.RichTextField(verbose_name='why this record matters')),
                ('image_library_link', models.URLField(blank=True, help_text='Link to an external image library', verbose_name='Image library link')),
                ('print_on_demand_link', models.URLField(blank=True, help_text='Link to an external print on demand service', verbose_name='Print on demand link')),
                ('featured_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.articlepage', verbose_name='featured article')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Search image')),
                ('teaser_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('teaser_text', models.TextField(default='', help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
            ],
            options={
                'verbose_name': 'record article',
                'verbose_name_plural': 'record articles',
            },
            bases=(etna.collections.models.TopicalPageMixin, wagtailmetadata.models.WagtailImageMetadataMixin, etna.analytics.mixins.DataLayerMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.RenameField(
            model_name='articleindexpage',
            old_name='sub_heading',
            new_name='intro',
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='intro',
            field=wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text'),
        ),
        migrations.RenameField(
            model_name='articlepage',
            old_name='sub_heading',
            new_name='intro',
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='intro',
            field=wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text'),
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0056_set_teaser_text_from_intro.migrate_forwards,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RenameField(
            model_name='recordarticlepage',
            old_name='standfirst',
            new_name='intro',
        ),
        migrations.AlterField(
            model_name='recordarticlepage',
            name='intro',
            field=wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text'),
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0059_update_revisions_to_reflect_intro_field_change.migrate_forwards,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0060_copy_articlepage_topic_and_timeperiod_values_to_link_tables.migrate_forwards,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RemoveField(
            model_name='articlepage',
            name='time_period',
        ),
        migrations.RemoveField(
            model_name='articlepage',
            name='topic',
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0062_fix_incorrectly_formatted_article_revision_content.migrate_forwards,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AlterField(
            model_name='recordarticlepage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Search image'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Search image'),
        ),
        migrations.AlterField(
            model_name='recordarticlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Search image'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='newly_published_at',
            field=models.DateField(default=None, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='mark_new_on_next_publish',
            field=models.BooleanField(default=True, verbose_name="mark this page as 'new' when published"),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='promoted_links',
            field=wagtail.fields.StreamField([('promoted_link', 2)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.ListBlock', (etna.core.blocks.promoted_links.AuthorPromotedLinkBlock,), {'max': 3}), 2: ('wagtail.blocks.StructBlock', [[('heading', 0), ('promoted_items', 1)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='articletag',
            name='slug',
            field=models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='featured_highlight_gallery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collections.highlightgallerypage', verbose_name='featured highlight gallery'),
        ),
        migrations.RemoveField(
            model_name='articlepage',
            name='hero_image_alt_text',
        ),
        migrations.RemoveField(
            model_name='articlepage',
            name='hero_image_decorative',
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='hero_image_caption',
            field=wagtail.fields.RichTextField(blank=True, help_text='An optional caption for hero images. This could be used for image sources or for other useful metadata.', verbose_name='hero image caption (optional)'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 46)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 2: ('wagtail.blocks.StructBlock', [[('text', 1)]], {}), 3: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 4: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 5: ('wagtail.blocks.StructBlock', [[('heading', 3), ('quote', 4), ('attribution', 3)]], {}), 6: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 7: ('wagtail.blocks.StructBlock', [[('heading', 6)]], {}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 10: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('image', 8), ('alt_text', 9), ('caption', 10)]], {}), 12: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'A background image for the media block'}), 13: ('etna.media.blocks.MediaChooserBlock', (), {}), 14: ('wagtail.blocks.StructBlock', [[('background_image', 12), ('media', 13)]], {}), 15: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page', 'page_type': ['articles.RecordArticlePage']}), 16: ('wagtail.blocks.StructBlock', [[('page', 15)]], {}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': "A short description (max 200 characters) to add 'relevancy' to the record details. For example: 'Entry for Alice Hawkins in the index to suffragettes arrested'.", 'label': 'Descriptive title', 'max_length': 200}), 18: ('etna.records.blocks.RecordChooserBlock', (), {}), 19: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 20: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 21: ('wagtail.blocks.RichTextBlock', (), {'features': ['link'], 'help_text': 'An optional caption for non-decorative images, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 22: ('wagtail.blocks.StructBlock', [[('image', 8), ('decorative', 19), ('alt_text', 20), ('caption', 21)]], {'help_text': 'Add an image to be displayed with the selected record.', 'label': 'Teaser image', 'required': False, 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 23: ('wagtail.blocks.StructBlock', [[('title', 17), ('record', 18), ('image', 22)]], {}), 24: ('wagtail.blocks.CharBlock', (), {'max_length': 200, 'required': False}), 25: ('wagtail.blocks.StructBlock', [[('introduction', 24)]], {}), 26: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 27: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 28: ('wagtail.blocks.DateBlock', (), {'required': False}), 29: ('wagtail.blocks.CharBlock', (), {'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration.', 'label': 'Duration', 'max_length': 50, 'required': False}), 31: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 32: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 33: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 34: ('wagtail.blocks.StructBlock', [[('image', 8), ('decorative', 19), ('alt_text', 20)]], {'label': 'Teaser image', 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 35: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 36: ('wagtail.blocks.StructBlock', [[('title', 26), ('category', 27), ('publication_date', 28), ('author', 29), ('duration', 30), ('url', 31), ('target_blank', 32), ('cta_label', 33), ('image', 34), ('description', 35)]], {}), 37: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 38: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 39: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 40: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 41: ('wagtail.blocks.URLBlock', (), {'required': True}), 42: ('wagtail.blocks.StructBlock', [[('title', 39), ('description', 40), ('url', 41)]], {}), 43: ('wagtail.blocks.ListBlock', (42,), {}), 44: ('wagtail.blocks.StructBlock', [[('category', 37), ('summary', 38), ('promoted_items', 43)]], {}), 45: ('wagtail.blocks.StreamBlock', [[('paragraph', 2), ('quote', 5), ('sub_heading', 7), ('image', 11), ('media', 14), ('featured_record_article', 16), ('featured_record', 23), ('featured_records', 25), ('promoted_item', 36), ('promoted_list', 44)]], {'required': False}), 46: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 45)]], {})}, null=True),
        ),
        migrations.AddField(
            model_name='articletag',
            name='skos_id',
            field=models.CharField(blank=True, help_text='Used as the identifier for this tag when sending page metatdata to the CIIM API.', max_length=100, verbose_name='SKOS identifier'),
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0077_set_skos_id_for_articletags.migrate_forwards,
            reverse_code=etna.articles.migrations.0077_set_skos_id_for_articletags.migrate_backwards,
        ),
        migrations.AlterField(
            model_name='articletag',
            name='skos_id',
            field=models.CharField(blank=True, db_index=True, help_text='Used as the identifier for this tag when sending page metatdata to the CIIM API.', max_length=100, unique=True, verbose_name='SKOS identifier'),
        ),
        migrations.AddField(
            model_name='articleindexpage',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='intro_image',
            field=models.ForeignKey(blank=True, help_text='Square, rotated image to display in the page introduction', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='intro image'),
        ),
        migrations.AlterField(
            model_name='recordarticlepage',
            name='promoted_links',
            field=wagtail.fields.StreamField([('promoted_link', 2)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.ListBlock', (etna.core.blocks.promoted_links.AuthorPromotedLinkBlock,), {'max_num': 3}), 2: ('wagtail.blocks.StructBlock', [[('heading', 0), ('promoted_items', 1)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='featured_article',
            field=models.ForeignKey(blank=True, help_text='Select a page to display in the featured area. This can be an Article, or Record Article.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='gallery_heading',
            field=models.CharField(blank=True, help_text='Optional heading for the gallery', max_length=250, null=True, verbose_name='gallery heading'),
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='featured_pages',
            field=wagtail.fields.StreamField([('featuredpages', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.TextBlock', (), {'max_length': 200}), 2: ('etna.core.blocks.page_list.PageListBlock', ('articles.ArticlePage', 'articles.RecordArticlePage'), {'max_num': 9, 'min_num': 3}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('description', 1), ('items', 2)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 42)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 2: ('wagtail.blocks.StructBlock', [[('text', 1)]], {}), 3: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 4: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('quote', 3), ('attribution', 4)]], {}), 6: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 7: ('wagtail.blocks.StructBlock', [[('heading', 6)]], {}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 10: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('image', 8), ('alt_text', 9), ('caption', 10)]], {}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 13: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'A background image for the media block'}), 14: ('etna.media.blocks.MediaChooserBlock', (), {}), 15: ('wagtail.blocks.StructBlock', [[('title', 12), ('background_image', 13), ('media', 14)]], {}), 16: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page', 'page_type': ['articles.RecordArticlePage']}), 17: ('wagtail.blocks.StructBlock', [[('page', 16)]], {}), 18: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 19: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 20: ('wagtail.blocks.CharBlock', (), {'help_text': 'This is a free text field. Please enter date as per agreed format: 14 April 2021', 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'required': False}), 22: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration.', 'label': 'Duration', 'max_length': 50, 'required': False}), 23: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 24: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 25: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 26: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 28: ('wagtail.blocks.StructBlock', [[('image', 8), ('decorative', 26), ('alt_text', 27)]], {'label': 'Teaser image', 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 29: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 30: ('wagtail.blocks.StructBlock', [[('title', 18), ('category', 19), ('publication_date', 20), ('author', 21), ('duration', 22), ('url', 23), ('target_blank', 24), ('cta_label', 25), ('image', 28), ('description', 29)]], {}), 31: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 32: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 33: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 34: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 35: ('wagtail.blocks.URLBlock', (), {'required': True}), 36: ('wagtail.blocks.StructBlock', [[('title', 33), ('description', 34), ('url', 35)]], {}), 37: ('wagtail.blocks.ListBlock', (36,), {}), 38: ('wagtail.blocks.StructBlock', [[('category', 31), ('summary', 32), ('promoted_items', 37)]], {}), 39: ('wagtail.blocks.ListBlock', (etna.records.blocks.RecordLinkBlock,), {'label': 'Items'}), 40: ('wagtail.blocks.StructBlock', [[('items', 39)]], {}), 41: ('wagtail.blocks.StreamBlock', [[('paragraph', 2), ('quote', 5), ('sub_heading', 7), ('image', 11), ('media', 15), ('featured_record_article', 17), ('promoted_item', 30), ('promoted_list', 38), ('record_links', 40)]], {'required': False}), 42: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 41)]], {})}, null=True),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='article_tag_names',
            field=models.TextField(editable=False, null=True),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='articles.TaggedArticle', to='articles.ArticleTag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='article_tag_names',
            field=models.TextField(editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='taggedarticle',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='wagtailcore.page'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='mark_new_on_next_publish',
            field=models.BooleanField(default=True, help_text="This will set the 'new' label for 21 days", verbose_name="mark this page as 'new' when published"),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='newly_published_at',
            field=models.DateField(default=None, editable=False, null=True, verbose_name='Page marked as new on'),
        ),
        migrations.CreateModel(
            name='FocusedArticlePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
                ('display_content_warning', models.BooleanField(default=False, verbose_name='display a content warning on this page')),
                ('custom_warning_text', wagtail.fields.RichTextField(blank=True, help_text='If specified, will be used for the content warning. Otherwise the default text will be used.', verbose_name='custom content warning text (optional)')),
                ('mark_new_on_next_publish', models.BooleanField(default=True, help_text="This will set the 'new' label for 21 days", verbose_name="mark this page as 'new' when published")),
                ('newly_published_at', models.DateField(default=None, editable=False, null=True, verbose_name='Page marked as new on')),
                ('hero_image_caption', wagtail.fields.RichTextField(blank=True, help_text='An optional caption for hero images. This could be used for image sources or for other useful metadata.', verbose_name='hero image caption (optional)')),
                ('author', models.CharField(blank=True, help_text='The author of this article.', max_length=100, null=True)),
                ('body', wagtail.fields.StreamField([('content_section', 42)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 2: ('wagtail.blocks.StructBlock', [[('text', 1)]], {}), 3: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 4: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('quote', 3), ('attribution', 4)]], {}), 6: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 7: ('wagtail.blocks.StructBlock', [[('heading', 6)]], {}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 10: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('image', 8), ('alt_text', 9), ('caption', 10)]], {}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 13: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'A background image for the media block'}), 14: ('etna.media.blocks.MediaChooserBlock', (), {}), 15: ('wagtail.blocks.StructBlock', [[('title', 12), ('background_image', 13), ('media', 14)]], {}), 16: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page', 'page_type': ['articles.RecordArticlePage']}), 17: ('wagtail.blocks.StructBlock', [[('page', 16)]], {}), 18: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 19: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 20: ('wagtail.blocks.CharBlock', (), {'help_text': 'This is a free text field. Please enter date as per agreed format: 14 April 2021', 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'required': False}), 22: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration.', 'label': 'Duration', 'max_length': 50, 'required': False}), 23: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 24: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 25: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 26: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 28: ('wagtail.blocks.StructBlock', [[('image', 8), ('decorative', 26), ('alt_text', 27)]], {'label': 'Teaser image', 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 29: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 30: ('wagtail.blocks.StructBlock', [[('title', 18), ('category', 19), ('publication_date', 20), ('author', 21), ('duration', 22), ('url', 23), ('target_blank', 24), ('cta_label', 25), ('image', 28), ('description', 29)]], {}), 31: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 32: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 33: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 34: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 35: ('wagtail.blocks.URLBlock', (), {'required': True}), 36: ('wagtail.blocks.StructBlock', [[('title', 33), ('description', 34), ('url', 35)]], {}), 37: ('wagtail.blocks.ListBlock', (36,), {}), 38: ('wagtail.blocks.StructBlock', [[('category', 31), ('summary', 32), ('promoted_items', 37)]], {}), 39: ('wagtail.blocks.ListBlock', (etna.records.blocks.RecordLinkBlock,), {'label': 'Items'}), 40: ('wagtail.blocks.StructBlock', [[('items', 39)]], {}), 41: ('wagtail.blocks.StreamBlock', [[('paragraph', 2), ('quote', 5), ('sub_heading', 7), ('image', 11), ('media', 15), ('featured_record_article', 17), ('promoted_item', 30), ('promoted_list', 38), ('record_links', 40)]], {'required': False}), 42: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 41)]], {})}, null=True)),
                ('hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Search image')),
                ('teaser_image', models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('article_tag_names', models.TextField(editable=False, null=True)),
                ('tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='articles.TaggedArticle', to='articles.ArticleTag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'focused article',
                'verbose_name_plural': 'focused articles',
            },
            bases=(etna.collections.models.TopicalPageMixin, wagtailmetadata.models.WagtailImageMetadataMixin, etna.analytics.mixins.DataLayerMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='mark_new_on_next_publish',
            field=models.BooleanField(default=True, help_text="This will set the 'new' label for 21 days", verbose_name="mark this page as 'new' when published"),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='newly_published_at',
            field=models.DateField(default=None, editable=False, null=True, verbose_name='Page marked as new on'),
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0098_alter_focusedarticlepage_author.convert_to_foreign_key,
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='featured_article',
            field=models.ForeignKey(blank=True, help_text='Select a page to display in the featured area. This can be an Article, Focused Article or Record Article.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='featured article'),
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='featured_pages',
            field=wagtail.fields.StreamField([('featuredpages', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.TextBlock', (), {'max_length': 200}), 2: ('etna.core.blocks.page_list.PageListBlock', ('articles.ArticlePage', 'articles.RecordArticlePage', 'articles.FocusedArticlePage'), {'max_num': 9, 'min_num': 3}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('description', 1), ('items', 2)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='recordarticlepage',
            name='featured_article',
            field=models.ForeignKey(blank=True, help_text='Select a page to display in the featured area. This can be an Article or Focused Article.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='featured article'),
        ),
        migrations.RemoveField(
            model_name='focusedarticlepage',
            name='author',
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0101_alter_articleindexpage_featured_article.set_newly_published_at,
        ),
        migrations.AlterField(
            model_name='recordarticlepage',
            name='featured_article',
            field=models.ForeignKey(blank=True, help_text='Select a page to display in the featured area. This can be an Article, Focused Article or Record Article.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='featured article'),
        ),
        migrations.AddField(
            model_name='articleindexpage',
            name='alert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='alert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='alert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='alert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert'),
        ),
        migrations.AddField(
            model_name='articleindexpage',
            name='twitter_og_description',
            field=models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description'),
        ),
        migrations.AddField(
            model_name='articleindexpage',
            name='twitter_og_image',
            field=models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image'),
        ),
        migrations.AddField(
            model_name='articleindexpage',
            name='twitter_og_title',
            field=models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='twitter_og_description',
            field=models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='twitter_og_image',
            field=models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='twitter_og_title',
            field=models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='twitter_og_description',
            field=models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='twitter_og_image',
            field=models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='twitter_og_title',
            field=models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='twitter_og_description',
            field=models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='twitter_og_image',
            field=models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='twitter_og_title',
            field=models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title'),
        ),
        migrations.AlterField(
            model_name='articleindexpage',
            name='search_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image'),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image'),
        ),
        migrations.AlterField(
            model_name='focusedarticlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image'),
        ),
        migrations.AlterField(
            model_name='recordarticlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image'),
        ),
        migrations.RemoveField(
            model_name='articleindexpage',
            name='uuid',
        ),
        migrations.RemoveField(
            model_name='articlepage',
            name='uuid',
        ),
        migrations.RemoveField(
            model_name='focusedarticlepage',
            name='uuid',
        ),
        migrations.RemoveField(
            model_name='recordarticlepage',
            name='uuid',
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 50)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Description'}), 3: ('wagtail.blocks.URLBlock', (), {'label': 'URL'}), 4: ('etna.core.blocks.image.APIImageChooserBlock', (), {'label': 'Image', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('title', 1), ('description', 2), ('url', 3), ('image', 4)]], {}), 6: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['wagtailcore.Page'], 'required': True}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional override for the teaser text', 'label': 'Teaser text override', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('page', 6), ('teaser_text', 7)]], {}), 9: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['articles.RecordArticlePage'], 'required_api_fields': ['teaser_image']}), 10: ('wagtail.blocks.StructBlock', [[('page', 9)]], {}), 11: ('etna.core.blocks.image.APIImageChooserBlock', (), {'rendition_size': 'max-900x900', 'required': True}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 13: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('image', 11), ('alt_text', 12), ('caption', 13)]], {}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 16: ('etna.core.blocks.image.APIImageChooserBlock', (), {'help_text': 'A thumbnail image for the media block', 'required': False}), 17: ('etna.media.blocks.MediaChooserBlock', (), {}), 18: ('wagtail.blocks.StructBlock', [[('title', 15), ('thumbnail', 16), ('media', 17)]], {}), 19: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 20: ('wagtail.blocks.StructBlock', [[('text', 19)]], {}), 21: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 23: ('wagtail.blocks.CharBlock', (), {'help_text': 'This is a free text field. Please enter date as per agreed format: 14 April 2021', 'required': False}), 24: ('wagtail.blocks.CharBlock', (), {'required': False}), 25: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration.', 'label': 'Duration', 'max_length': 50, 'required': False}), 26: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 27: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 29: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 31: ('wagtail.blocks.StructBlock', [[('image', 11), ('decorative', 29), ('alt_text', 30)]], {'label': 'Teaser image', 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 32: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 33: ('wagtail.blocks.StructBlock', [[('title', 21), ('category', 22), ('publication_date', 23), ('author', 24), ('duration', 25), ('url', 26), ('target_blank', 27), ('cta_label', 28), ('image', 31), ('description', 32)]], {}), 34: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 35: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 36: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 37: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 38: ('wagtail.blocks.URLBlock', (), {'required': True}), 39: ('wagtail.blocks.StructBlock', [[('title', 36), ('description', 37), ('url', 38)]], {}), 40: ('wagtail.blocks.ListBlock', (39,), {}), 41: ('wagtail.blocks.StructBlock', [[('category', 34), ('summary', 35), ('promoted_items', 40)]], {}), 42: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 43: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 44: ('wagtail.blocks.StructBlock', [[('quote', 42), ('attribution', 43)]], {}), 45: ('wagtail.blocks.ListBlock', (etna.records.blocks.RecordLinkBlock,), {'label': 'Items'}), 46: ('wagtail.blocks.StructBlock', [[('items', 45)]], {}), 47: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 48: ('wagtail.blocks.StructBlock', [[('heading', 47)]], {}), 49: ('wagtail.blocks.StreamBlock', [[('featured_external_link', 5), ('featured_page', 8), ('featured_record_article', 10), ('image', 14), ('media', 18), ('paragraph', 20), ('promoted_item', 33), ('promoted_list', 41), ('quote', 44), ('record_links', 46), ('sub_heading', 48)]], {'required': False}), 50: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 49)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='focusedarticlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 50)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Description'}), 3: ('wagtail.blocks.URLBlock', (), {'label': 'URL'}), 4: ('etna.core.blocks.image.APIImageChooserBlock', (), {'label': 'Image', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('title', 1), ('description', 2), ('url', 3), ('image', 4)]], {}), 6: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['wagtailcore.Page'], 'required': True}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional override for the teaser text', 'label': 'Teaser text override', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('page', 6), ('teaser_text', 7)]], {}), 9: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['articles.RecordArticlePage'], 'required_api_fields': ['teaser_image']}), 10: ('wagtail.blocks.StructBlock', [[('page', 9)]], {}), 11: ('etna.core.blocks.image.APIImageChooserBlock', (), {'rendition_size': 'max-900x900', 'required': True}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 13: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('image', 11), ('alt_text', 12), ('caption', 13)]], {}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 16: ('etna.core.blocks.image.APIImageChooserBlock', (), {'help_text': 'A thumbnail image for the media block', 'required': False}), 17: ('etna.media.blocks.MediaChooserBlock', (), {}), 18: ('wagtail.blocks.StructBlock', [[('title', 15), ('thumbnail', 16), ('media', 17)]], {}), 19: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 20: ('wagtail.blocks.StructBlock', [[('text', 19)]], {}), 21: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 23: ('wagtail.blocks.CharBlock', (), {'help_text': 'This is a free text field. Please enter date as per agreed format: 14 April 2021', 'required': False}), 24: ('wagtail.blocks.CharBlock', (), {'required': False}), 25: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration.', 'label': 'Duration', 'max_length': 50, 'required': False}), 26: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 27: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 29: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 31: ('wagtail.blocks.StructBlock', [[('image', 11), ('decorative', 29), ('alt_text', 30)]], {'label': 'Teaser image', 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 32: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 33: ('wagtail.blocks.StructBlock', [[('title', 21), ('category', 22), ('publication_date', 23), ('author', 24), ('duration', 25), ('url', 26), ('target_blank', 27), ('cta_label', 28), ('image', 31), ('description', 32)]], {}), 34: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 35: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 36: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 37: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 38: ('wagtail.blocks.URLBlock', (), {'required': True}), 39: ('wagtail.blocks.StructBlock', [[('title', 36), ('description', 37), ('url', 38)]], {}), 40: ('wagtail.blocks.ListBlock', (39,), {}), 41: ('wagtail.blocks.StructBlock', [[('category', 34), ('summary', 35), ('promoted_items', 40)]], {}), 42: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': True}), 43: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 44: ('wagtail.blocks.StructBlock', [[('quote', 42), ('attribution', 43)]], {}), 45: ('wagtail.blocks.ListBlock', (etna.records.blocks.RecordLinkBlock,), {'label': 'Items'}), 46: ('wagtail.blocks.StructBlock', [[('items', 45)]], {}), 47: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 48: ('wagtail.blocks.StructBlock', [[('heading', 47)]], {}), 49: ('wagtail.blocks.StreamBlock', [[('featured_external_link', 5), ('featured_page', 8), ('featured_record_article', 10), ('image', 14), ('media', 18), ('paragraph', 20), ('promoted_item', 33), ('promoted_list', 41), ('quote', 44), ('record_links', 46), ('sub_heading', 48)]], {'required': False}), 50: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 49)]], {})}, null=True),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='published_date',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='The date the page was published to the public.', verbose_name='Published date'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='published_date',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='The date the page was published to the public.', verbose_name='Published date'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='published_date',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='The date the page was published to the public.', verbose_name='Published date'),
        ),
        migrations.RunPython(
            code=etna.articles.migrations.0113_remove_articlepage_mark_new_on_next_publish_and_more.Migration.migrate_data,
        ),
        migrations.RemoveField(
            model_name='articlepage',
            name='mark_new_on_next_publish',
        ),
        migrations.RemoveField(
            model_name='articlepage',
            name='newly_published_at',
        ),
        migrations.RemoveField(
            model_name='focusedarticlepage',
            name='mark_new_on_next_publish',
        ),
        migrations.RemoveField(
            model_name='focusedarticlepage',
            name='newly_published_at',
        ),
        migrations.RemoveField(
            model_name='recordarticlepage',
            name='mark_new_on_next_publish',
        ),
        migrations.RemoveField(
            model_name='recordarticlepage',
            name='newly_published_at',
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 50)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Description'}), 3: ('wagtail.blocks.URLBlock', (), {'label': 'URL'}), 4: ('etna.core.blocks.image.APIImageChooserBlock', (), {'label': 'Image', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('title', 1), ('description', 2), ('url', 3), ('image', 4)]], {}), 6: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['wagtailcore.Page'], 'required': True}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional override for the teaser text', 'label': 'Teaser text override', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('page', 6), ('teaser_text', 7)]], {}), 9: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['articles.RecordArticlePage'], 'required_api_fields': ['teaser_image']}), 10: ('wagtail.blocks.StructBlock', [[('page', 9)]], {}), 11: ('etna.core.blocks.image.APIImageChooserBlock', (), {'rendition_size': 'max-900x900', 'required': True}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 13: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('image', 11), ('alt_text', 12), ('caption', 13)]], {}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 16: ('etna.core.blocks.image.APIImageChooserBlock', (), {'help_text': 'A thumbnail image for the media block', 'required': False}), 17: ('etna.media.blocks.MediaChooserBlock', (), {}), 18: ('wagtail.blocks.StructBlock', [[('title', 15), ('thumbnail', 16), ('media', 17)]], {}), 19: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 20: ('wagtail.blocks.StructBlock', [[('text', 19)]], {}), 21: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 23: ('wagtail.blocks.CharBlock', (), {'help_text': 'This is a free text field. Please enter date as per agreed format: 14 April 2021', 'required': False}), 24: ('wagtail.blocks.CharBlock', (), {'required': False}), 25: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration.', 'label': 'Duration', 'max_length': 50, 'required': False}), 26: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 27: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 29: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 31: ('wagtail.blocks.StructBlock', [[('image', 11), ('decorative', 29), ('alt_text', 30)]], {'label': 'Teaser image', 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 32: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 33: ('wagtail.blocks.StructBlock', [[('title', 21), ('category', 22), ('publication_date', 23), ('author', 24), ('duration', 25), ('url', 26), ('target_blank', 27), ('cta_label', 28), ('image', 31), ('description', 32)]], {}), 34: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 35: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 36: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 37: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 38: ('wagtail.blocks.URLBlock', (), {'required': True}), 39: ('wagtail.blocks.StructBlock', [[('title', 36), ('description', 37), ('url', 38)]], {}), 40: ('wagtail.blocks.ListBlock', (39,), {}), 41: ('wagtail.blocks.StructBlock', [[('category', 34), ('summary', 35), ('promoted_items', 40)]], {}), 42: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 43: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 44: ('wagtail.blocks.StructBlock', [[('quote', 42), ('attribution', 43)]], {}), 45: ('wagtail.blocks.ListBlock', (etna.records.blocks.RecordLinkBlock,), {'label': 'Items'}), 46: ('wagtail.blocks.StructBlock', [[('items', 45)]], {}), 47: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 48: ('wagtail.blocks.StructBlock', [[('heading', 47)]], {}), 49: ('wagtail.blocks.StreamBlock', [[('featured_external_link', 5), ('featured_page', 8), ('featured_record_article', 10), ('image', 14), ('media', 18), ('paragraph', 20), ('promoted_item', 33), ('promoted_list', 41), ('quote', 44), ('record_links', 46), ('sub_heading', 48)]], {'required': False}), 50: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 49)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='focusedarticlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 50)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Description'}), 3: ('wagtail.blocks.URLBlock', (), {'label': 'URL'}), 4: ('etna.core.blocks.image.APIImageChooserBlock', (), {'label': 'Image', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('title', 1), ('description', 2), ('url', 3), ('image', 4)]], {}), 6: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['wagtailcore.Page'], 'required': True}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional override for the teaser text', 'label': 'Teaser text override', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('page', 6), ('teaser_text', 7)]], {}), 9: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['articles.RecordArticlePage'], 'required_api_fields': ['teaser_image']}), 10: ('wagtail.blocks.StructBlock', [[('page', 9)]], {}), 11: ('etna.core.blocks.image.APIImageChooserBlock', (), {'rendition_size': 'max-900x900', 'required': True}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Alternative text', 'max_length': 100}), 13: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 14: ('wagtail.blocks.StructBlock', [[('image', 11), ('alt_text', 12), ('caption', 13)]], {}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 16: ('etna.core.blocks.image.APIImageChooserBlock', (), {'help_text': 'A thumbnail image for the media block', 'required': False}), 17: ('etna.media.blocks.MediaChooserBlock', (), {}), 18: ('wagtail.blocks.StructBlock', [[('title', 15), ('thumbnail', 16), ('media', 17)]], {}), 19: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 20: ('wagtail.blocks.StructBlock', [[('text', 19)]], {}), 21: ('wagtail.blocks.CharBlock', (), {'help_text': 'Title of the promoted page', 'label': 'Title', 'max_length': 100}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('blog', 'Blog post'), ('podcast', 'Podcast'), ('video', 'Video'), ('video-external', 'External video'), ('external-link', 'External link')], 'label': 'Category'}), 23: ('wagtail.blocks.CharBlock', (), {'help_text': 'This is a free text field. Please enter date as per agreed format: 14 April 2021', 'required': False}), 24: ('wagtail.blocks.CharBlock', (), {'required': False}), 25: ('wagtail.blocks.CharBlock', (), {'help_text': 'Podcast or video duration.', 'label': 'Duration', 'max_length': 50, 'required': False}), 26: ('wagtail.blocks.URLBlock', (), {'help_text': 'URL for the external page', 'label': 'External URL'}), 27: ('wagtail.blocks.BooleanBlock', (), {'label': "Should this URL open in a new tab? <p style='font-size: 11px;'>Tick the box if 'yes'</p>", 'required': False}), 28: ('wagtail.blocks.CharBlock', (), {'help_text': "The text displayed on the button for your URL. If your URL links to an external site, please add the name of the site users will land on, and what they will find on this page. For example 'Watch our short film  <strong>about Shakespeare on YouTube</strong>'.", 'label': 'Call to action label', 'max_length': 50}), 29: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Decorative images are used for visual effect and do not add information to the content of a page. <a href="https://www.w3.org/WAI/tutorials/images/decorative/" target="_blank">"Check the guidance to see if your image is decorative</a>.', 'label': "Is this image decorative? <p class='field-title__subheading'>Tick the box if 'yes'</p>", 'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. Decorative images do not require alt text. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', 'label': 'Image alternative text', 'max_length': 100, 'required': False}), 31: ('wagtail.blocks.StructBlock', [[('image', 11), ('decorative', 29), ('alt_text', 30)]], {'label': 'Teaser image', 'template': 'articles/blocks/images/blog-embed__image-container.html'}), 32: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the promoted page'}), 33: ('wagtail.blocks.StructBlock', [[('title', 21), ('category', 22), ('publication_date', 23), ('author', 24), ('duration', 25), ('url', 26), ('target_blank', 27), ('cta_label', 28), ('image', 31), ('description', 32)]], {}), 34: ('wagtail.snippets.blocks.SnippetChooserBlock', ('categories.Category',), {}), 35: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 36: ('wagtail.blocks.CharBlock', (), {'help_text': 'The title of the target page', 'max_length': 100, 'required': True}), 37: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'A description of the target page', 'required': False}), 38: ('wagtail.blocks.URLBlock', (), {'required': True}), 39: ('wagtail.blocks.StructBlock', [[('title', 36), ('description', 37), ('url', 38)]], {}), 40: ('wagtail.blocks.ListBlock', (39,), {}), 41: ('wagtail.blocks.StructBlock', [[('category', 34), ('summary', 35), ('promoted_items', 40)]], {}), 42: ('etna.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 43: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 44: ('wagtail.blocks.StructBlock', [[('quote', 42), ('attribution', 43)]], {}), 45: ('wagtail.blocks.ListBlock', (etna.records.blocks.RecordLinkBlock,), {'label': 'Items'}), 46: ('wagtail.blocks.StructBlock', [[('items', 45)]], {}), 47: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 48: ('wagtail.blocks.StructBlock', [[('heading', 47)]], {}), 49: ('wagtail.blocks.StreamBlock', [[('featured_external_link', 5), ('featured_page', 8), ('featured_record_article', 10), ('image', 14), ('media', 18), ('paragraph', 20), ('promoted_item', 33), ('promoted_list', 41), ('quote', 44), ('record_links', 46), ('sub_heading', 48)]], {'required': False}), 50: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 49)]], {})}, null=True),
        ),
    ]
