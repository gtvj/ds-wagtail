# Generated by Django 3.2.12 on 2022-03-04 22:26


from django.db import migrations


def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    tag = apps.get_model("insights", "InsightsTag")
    db_alias = schema_editor.connection.alias
    tag.objects.using(db_alias).bulk_create(
        [
            tag(name="Africa", slug="Africa"),
            tag(name="Aid and development", slug="Aid and development"),
            tag(name="Air Force", slug="Air Force"),
            tag(name="Air transport", slug="Air transport"),
            tag(
                name="Art, architecture and design", slug="Art, architecture and design"
            ),
            tag(name="Asia", slug="Asia"),
            tag(name="Australia and Pacific", slug="Australia and Pacific"),
            tag(name="Badges and insignia", slug="Badges and insignia"),
            tag(name="Banking", slug="Banking"),
            tag(name="Canals and river transport", slug="Canals and river transport"),
            tag(name="Caribbean", slug="Caribbean"),
            tag(name="Census", slug="Census"),
            tag(name="Charities", slug="Charities"),
            tag(name="Chartism", slug="Chartism"),
            tag(name="Children", slug="Children"),
            tag(name="Clothing", slug="Clothing"),
            tag(name="Coal", slug="Coal"),
            tag(name="Common land", slug="Common land"),
            tag(name="Communications", slug="Communications"),
            tag(name="Communism", slug="Communism"),
            tag(name="Computing", slug="Computing"),
            tag(name="Conflict", slug="Conflict"),
            tag(name="Conscientious objection", slug="Conscientious objection"),
            tag(name="Construction industries", slug="Construction industries"),
            tag(name="Conveyancing", slug="AConveyancing"),
            tag(name="Crime", slug="Crime"),
            tag(name="Crown lands and estates", slug="Crown lands and estates"),
            tag(name="Debt", slug="Debt"),
            tag(name="Democracy", slug="Democracy"),
            tag(name="Devolution", slug="Devolution"),
            tag(name="Diaries", slug="Diaries"),
            tag(name="Disability", slug="Disability"),
            tag(name="Disarmament", slug="Disarmament"),
            tag(name="Disasters and emergencies", slug="Disasters and emergencies"),
            tag(name="Disease", slug="Disease"),
            tag(name="Education", slug="Education"),
            tag(name="Electoral reform", slug="Electoral reform"),
            tag(name="Electricity", slug="Electricity"),
            tag(name="Europe and Russia", slug="Europe and Russia"),
            tag(name="Events and exhibitions", slug="Events and exhibitions"),
            tag(name="Farming", slug="Farming"),
            tag(name="Fascism", slug="Fascism"),
            tag(name="Fishing", slug="Fishing"),
            tag(name="Food and drink", slug="Food and drink"),
            tag(name="Forestry", slug="Forestry"),
            tag(name="Freemasons", slug="Freemasons"),
            tag(name="Friendly societies", slug="Friendly societies"),
            tag(name="Government finances", slug="Government finances"),
            tag(name="Hospitals", slug="Hospitals"),
            tag(name="Housing", slug="Housing"),
            tag(name="Hunting", slug="Hunting"),
            tag(name="Indian Subcontinent", slug="Indian Subcontinent"),
            tag(name="Inflation", slug="Inflation"),
            tag(name="Intelligence", slug="Intelligence"),
            tag(name="International", slug="International"),
            tag(name="Internment", slug="Internment"),
            tag(name="Ireland", slug="Ireland"),
            tag(name="Iron, steel and metals", slug="Iron, steel and metals"),
            tag(name="Labour", slug="Labour"),
            tag(name="Landed estates", slug="Landed estates"),
            tag(name="Legal", slug="Legal"),
            tag(name="Literature", slug="Literature"),
            tag(name="Litigation", slug="Litigation"),
            tag(name="Local Government", slug="Local Government"),
            tag(name="Manors", slug="Manors"),
            tag(name="Manufacturing", slug="Manufacturing"),
            tag(name="Maps and plans", slug="Maps and plans"),
            tag(name="Marriage and divorce", slug="Marriage and divorce"),
            tag(name="Medals", slug="Medals"),
            tag(name="Medicine", slug="Medicine"),
            tag(name="Mental illness", slug="Mental illness"),
            tag(name="Merchant seaman", slug="Merchant seaman"),
            tag(name="Middle East", slug="Middle East"),
            tag(name="Migration", slug="Migration"),
            tag(name="Mining and quarrying", slug="Mining and quarrying"),
            tag(name="Museums and galleries", slug="Museums and gallerie"),
            tag(name="Mutual societies", slug="Mutual societies"),
            tag(name="National debt", slug="National debt"),
            tag(name="National Health Service", slug="National Health Service"),
            tag(name="Navy", slug="Navy"),
            tag(name="Nuclear energy", slug="Nuclear energy"),
            tag(name="Nursing", slug="Nursing"),
            tag(name="Official publications", slug="Official publications"),
            tag(name="Oil and gas", slug="Oil and gas"),
            tag(
                name="Operations, battles and campaigns",
                slug="Operations, battles and campaigns",
            ),
            tag(name="Pay and pensions", slug="Pay and pensions"),
            tag(name="Performing arts", slug="Performing arts"),
            tag(name="Personal and family papers", slug="Personal and family papers"),
            tag(name="Photography and film", slug="Photography and film"),
            tag(name="Piracy and privateering", slug="Piracy and privateering"),
            tag(
                name="Planning (Land and Property)", slug="Planning (Land and Property)"
            ),
            tag(name="Polar", slug="Polar"),
            tag(name="Policing", slug="Policing"),
            tag(name="Population", slug="Population"),
            tag(name="Poverty", slug="Poverty"),
            tag(name="Transport management", slug="Transport management"),
            tag(name="Travel and tourism", slug="Travel and tourism"),
            tag(name="Treason and rebellion", slug="Treason and rebellion"),
            tag(name="Transportation", slug="Transportation"),
            tag(name="Trade and commerce", slug="Trade and commerce"),
            tag(name="Tithes", slug="Tithes"),
            tag(name="Taxation", slug="Taxation"),
            tag(name="Sports", slug="Sports"),
            tag(name="Slavery", slug="Slavery"),
            tag(name="Shipping", slug="Shipping"),
            tag(name="Sex and gender", slug="Sex and gender"),
            tag(name="Sewerage", slug="Sewerage"),
            tag(name="Royalty", slug="Royalty"),
            tag(name="Royal Parks", slug="Royal Parks"),
            tag(name="Road transport", slug="Road transport"),
            tag(name="Resources", slug="Resources"),
            tag(name="Research", slug="Research"),
            tag(name="Renewable energies", slug="Renewable energies"),
            tag(
                name="Religious discrimination and persecution",
                slug="Religious discrimination and persecution",
            ),
            tag(name="Religions", slug="Religions"),
            tag(name="Refugees", slug="Refugees"),
            tag(name="Rationing", slug="Rationing"),
            tag(name="Railways", slug="Railways"),
            tag(name="Radio and television", slug="Radio and television"),
            tag(name="Race relations", slug="Race relations"),
            tag(name="Public disorder", slug="Public disorder"),
            tag(name="Treaties and alliances", slug="Treaties and alliances"),
            tag(name="Weapons", slug="Weapons"),
            tag(name="Witchcraft", slug="Witchcraft"),
            tag(name="Votes for women", slug="Votes for women"),
            tag(name="UFOs", slug="UFOs"),
        ]
    )


def reverse_func(apps, schema_editor):
    insightstag = apps.get_model("insights", "InsightsTag")
    insightstag.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("taggit", "0003_taggeditem_add_unique_index"),
        ("insights", "0031_auto_20220306_0443"),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
